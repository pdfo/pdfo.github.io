# Workflow to get download count statistics
name: Get download counts

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  # Run the workflow at the end of every day
  schedule:
    - cron: '0 0 * * *'
  # Run the workflow when it is manually triggered
  workflow_dispatch:

jobs:
  # Generate the statistics in JSON format
  get-stats:
    name: Get the statistics
    runs-on: ubuntu-latest

    steps:
      - name: Checkout pdfo.github.io
        uses: actions/checkout@v2
        with:
          # Set the main branch for the git-auto-commit-action action
          # It is otherwise undefined for any non-push event
          ref: ${{ github.head_ref }}

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Set the dump file
        run: |
          echo "file_name=./static/scripts/stats/stats.json" >> $GITHUB_ENV

      - name: Generate statistics
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install -r ./static/scripts/stats/requirements.txt
          python ./static/scripts/stats/counts.py ${{ env.file_name }}

      - name: Commit the statistics
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update ${{ env.file_name }}
          # Used by `git-commit`
          # See https://git-scm.com/docs/git-commit#_options
          commit_options: '--no-verify --signoff'
          # Global pattern of files which should be added to the commit
          # See the `pathspec`-documentation for git
          # - https://git-scm.com/docs/git-add#Documentation/git-add.txt-ltpathspecgt82308203
          # - https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefpathspecapathspec
          file_pattern: '*.json'
          # Local file path to the repository
          repository: .
          # Commit user and author settings
          commit_user_name: pdfo
          commit_user_email: pdfocode@gmail.com
          commit_author: PDFO <pdfocode@gmail.com>
          # Used by `git-status`
          # See https://git-scm.com/docs/git-status#_options
          status_options: '--untracked-files=no'
          # Used by `git-add`
          # See https://git-scm.com/docs/git-add#_options
          add_options: '-u'
          # Used by `git-push`
          # See https://git-scm.com/docs/git-push#_options
          push_options: '--force'
          # Disable dirty check and always try to create a commit and push
          skip_dirty_check: true
          # Prevents the shell from expanding filenames
          # Details: https://www.gnu.org/software/bash/manual/html_node/Filename-Expansion.html
          disable_globbing: true